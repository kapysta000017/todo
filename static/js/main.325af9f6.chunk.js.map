{"version":3,"sources":["components/todoList.module.scss","bd/close.svg","bd/pen.svg","components/TodoList.jsx","bd/bd.js","components/InputTodo.jsx","App.jsx","index.js","components/inputTodo.module.scss"],"names":["module","exports","TodoList","tasks","setTasks","map","task","className","todoList","inner","label","defaultCheckBox","onChange","state","item","id","completed","onToggleTodo","type","checked","styleCheckBox","color","text","img","src","penSvg","alt","onClick","window","prompt","split","join","trim","onEditTodo","closeSvg","filter","onRemoveTodo","todos","colors","InputTodo","useState","value","setValue","selectColor","setSelectColor","inputTodo","onSubmit","e","length","preventDefault","inputText","target","placeholder","defaultRadio","name","classNames","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.325af9f6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"inner\":\"todoList_inner__1HIgj\",\"label\":\"todoList_label__RHfLb\",\"defaultCheckBox\":\"todoList_defaultCheckBox__2xazN\",\"styleCheckBox\":\"todoList_styleCheckBox__Mwqas\",\"green\":\"todoList_green__JMvax\",\"orange\":\"todoList_orange__3T3_9\",\"blue\":\"todoList_blue__DhCJi\",\"red\":\"todoList_red__2gclP\",\"darkorchid\":\"todoList_darkorchid__1kpQO\",\"text\":\"todoList_text__7ieen\",\"img\":\"todoList_img__2YIuI\"};","export default __webpack_public_path__ + \"static/media/close.64f09d76.svg\";","export default __webpack_public_path__ + \"static/media/pen.d3c0b4ce.svg\";","import todoList from \"./todoList.module.scss\"\r\nimport closeSvg from \"../bd/close.svg\"\r\nimport penSvg from \"../bd/pen.svg\"\r\n\r\nexport default function TodoList({ tasks, setTasks }) {\r\n  const onEditTodo = (task) => {\r\n    setTasks((state) =>\r\n      state.map((item) => {\r\n        if (item.id === task.id) {\r\n          const text = window.prompt(\"Введи\", [task.text])\r\n          if (text !== null) {\r\n            if (text.split(\" \").join(\"\")) {\r\n              item.text = text.trim()\r\n            }\r\n          }\r\n        }\r\n        return item\r\n      })\r\n    )\r\n  }\r\n\r\n  const onRemoveTodo = (task) => {\r\n    setTasks((state) => state.filter((item) => item.id !== task.id))\r\n  }\r\n\r\n  const onToggleTodo = (task) => {\r\n    setTasks((state) =>\r\n      state.map((item) => {\r\n        if (item.id === task.id) {\r\n          item.completed = !task.completed\r\n        }\r\n        return item\r\n      })\r\n    )\r\n  }\r\n\r\n  return tasks.map((task) => {\r\n    return (\r\n      <div className={todoList.inner} key={task.id}>\r\n        <label className={todoList.label}>\r\n          <input\r\n            className={todoList.defaultCheckBox}\r\n            onChange={() => onToggleTodo(task)}\r\n            type=\"checkbox\"\r\n            checked={task.completed}\r\n          />\r\n          <span className={todoList.styleCheckBox}></span>\r\n          <div className={todoList[task.color]}></div>\r\n          <p className={todoList.text}>{task.text}</p>\r\n        </label>\r\n        <img\r\n          className={todoList.img}\r\n          src={penSvg}\r\n          alt=\"pen\"\r\n          onClick={() => onEditTodo(task)}\r\n        />\r\n        <img\r\n          className={todoList.img}\r\n          src={closeSvg}\r\n          alt=\"close\"\r\n          onClick={() => onRemoveTodo(task)}\r\n        />\r\n      </div>\r\n    )\r\n  })\r\n}\r\n","export const todos = [\r\n  {\r\n    id: 1,\r\n    text: \"focus for tab, tab+shift\",\r\n    color: \"red\",\r\n    completed: false,\r\n  },\r\n  {\r\n    id: 2,\r\n    text: \"Сохранить задачи\",\r\n    color: \"green\",\r\n    completed: false,\r\n  },\r\n]\r\nexport const colors = [\"darkorchid\", \"red\", \"blue\", \"orange\", \"green\"]\r\n","import classNames from \"classnames\"\r\nimport React, { useState } from \"react\"\r\nimport { colors } from \"../bd/bd\"\r\nimport inputTodo from \"./inputTodo.module.scss\"\r\n\r\nexport default function InputTodo({ setTasks }) {\r\n  const [value, setValue] = useState(\"\")\r\n  const [selectColor, setSelectColor] = useState(\"\")\r\n\r\n  function onSubmit(e) {\r\n    if (value.split(\" \").join(\"\") && selectColor) {\r\n      setTasks((state) => [\r\n        ...state,\r\n        {\r\n          id: state.length !== 0 ? state[state.length - 1].id + 1 : 0,\r\n          text: value.trim(),\r\n          color: selectColor,\r\n          completed: false,\r\n        },\r\n      ])\r\n      setValue(\"\")\r\n    }\r\n    e.preventDefault()\r\n  }\r\n  return (\r\n    <div className={inputTodo.inner}>\r\n      <form onSubmit={onSubmit}>\r\n        <input\r\n          className={inputTodo.inputText}\r\n          type=\"text\"\r\n          value={value}\r\n          onChange={(e) => setValue(e.target.value)}\r\n          placeholder=\"Текст задачи...\"\r\n        />\r\n        {colors.map((color) => (\r\n          <label className={inputTodo.label} key={color}>\r\n            <input\r\n              className={inputTodo.defaultRadio}\r\n              type=\"radio\"\r\n              name=\"rd\"\r\n              onChange={() => setSelectColor(color)}\r\n            />\r\n            <span\r\n              className={classNames(\r\n                inputTodo[color],\r\n                inputTodo[`styleRadio-${color}`]\r\n              )}\r\n            ></span>\r\n          </label>\r\n        ))}\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState } from \"react\"\r\nimport TodoList from \"./components/TodoList\"\r\nimport InputTodo from \"./components/InputTodo\"\r\nimport { todos } from \"./bd/bd\"\r\nimport \"./app.scss\"\r\n\r\nfunction App() {\r\n  const [tasks, setTasks] = useState(todos)\r\n  return (\r\n    <div className=\"app\">\r\n      <h2>Список задач</h2>\r\n      <TodoList setTasks={setTasks} tasks={tasks} />\r\n      <InputTodo setTasks={setTasks} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport App from \"./App\"\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"))\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inner\":\"inputTodo_inner__2DDA0\",\"inputText\":\"inputTodo_inputText__v7avS\",\"label\":\"inputTodo_label__7cY2X\",\"defaultRadio\":\"inputTodo_defaultRadio__3lFKs\",\"green\":\"inputTodo_green__3x4Ut\",\"orange\":\"inputTodo_orange__Pms2z\",\"blue\":\"inputTodo_blue__3JhDO\",\"darkorchid\":\"inputTodo_darkorchid__1Ez96\",\"red\":\"inputTodo_red__qm_O1\",\"styleRadio-green\":\"inputTodo_styleRadio-green__3iDmM\",\"styleRadio-orange\":\"inputTodo_styleRadio-orange__3azTY\",\"styleRadio-blue\":\"inputTodo_styleRadio-blue__1t_28\",\"styleRadio-darkorchid\":\"inputTodo_styleRadio-darkorchid__1TL9P\",\"styleRadio-red\":\"inputTodo_styleRadio-red__3TFDu\"};"],"sourceRoot":""}